import styles from "@/styles/Home.module.css";
import Head from "next/head";
import { useCallback, useReducer, useState } from "react";
import { giphySearch } from "../api/gighy";

const initialState = {
  giphys: [],
};
const TITLE = "Giphy Search App";

const reducer = (state: any, action: any) => {
  switch (action.type) {
    case "LOAD":
      const { data: giphys } = action;
      return {
        ...state,
        giphys,
      };
    default:
      return state;
  }
};

const Home = (props: any) => {
  const [state, dispatch] = useReducer(reducer, props);
  const [searchStr, setSearchStr] = useState("cats");
  const { giphys } = state;

  const handleClick = useCallback(async () => {
    const { data } = await giphySearch(searchStr);
    dispatch({ type: "LOAD", data });
  }, [searchStr]);

  return (
    <>
      <Head>
        <title>{TITLE}</title>
        <meta
          name="description"
          content={`Generated by create next app. ${TITLE}`}
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="/styles.css" />
      </Head>
      <main className={styles.main}>
        <header>
          <h1>{TITLE}</h1>
          <form>
            <input
              className={styles.input}
              value={searchStr}
              onChange={(e) => setSearchStr(e.target.value)}
              type="text"
            />
            <button className={styles.searchBtn} onClick={handleClick}>
              Search
            </button>
          </form>
        </header>

        <section className={styles.container}>
          <div className={styles.giphyGrid}>
            {giphys.map((each: any, index: number) => {
              return (
                <div key={index}>
                  <h3>{each.title}</h3>
                  <img src={each.images.original.url} alt={each.title} />
                </div>
              );
            })}
          </div>
        </section>
      </main>
    </>
  );
};

export async function getStaticProps() {
  const { data: giphys } = await giphySearch("cats");
  return {
    props: {
      giphys,
    },
    revalidate: 10,
  };
}

export default Home;
